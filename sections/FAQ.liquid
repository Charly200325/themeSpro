{% schema %}
{
  "name": "FAQ Accordion",
  "tag": "section",
  "class": "faq-accordion-section",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "FAQ"
    }
  ],
  "blocks": [
    {
      "type": "faq_item",
      "name": "FAQ Item",
      "settings": [
        {
          "type": "text",
          "id": "question",
          "label": "Question"
        },
        {
          "type": "textarea",
          "id": "answer",
          "label": "Answer"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "FAQ Accordion",
      "category": "Custom",
      "blocks": [
        {
          "type": "faq_item",
          "settings": {
            "question": "Can I use this product as a base under other makeup?",
            "answer": "Absolutely! The Beauty Balm works beautifully as a lightweight base under other makeup products. Its hydrating formula helps create a smooth canvas for foundation, concealer, or powder, while still allowing your skin to breathe."
          }
        }
      ]
    }
  ]
}
{% endschema %}

{% style %}
.faq-accordion-section {
  background-color: #896E5D;
  padding: 60px 20px;
}
.faq-accordion-section h2 {
  font-family: 'Minerva Modern', serif;
  font-size: 32px;
  color: white;
  text-align: center;
  text-transform: uppercase;
  margin-bottom: 40px;
}
.faq-list {
  max-width: 800px;
  margin: 0 auto;
}
.faq-item {
  margin-bottom: 16px;
  border-radius: 12px;
  overflow: hidden;
  transition: all 0.3s ease;
}
.faq-question {
  background-color: #FBF1E8;
  display: flex;
  align-items: center;
  gap: 16px;
  justify-content: flex-start;
  padding: 20px 14px;
  font-size: 14px;
  font-weight: 500;
  text-transform: uppercase;
  cursor: pointer;
  color: #273534;
  border-radius: 12px 12px 0 0;
}
.faq-answer {
  display: none;
  background-color: #ffffff;
  padding: 25px 32px 32px;
  font-size: 16px;
  color: #695A5A;
  border-radius: 0 0 12px 12px;
}
.faq-item.open .faq-answer {
  display: block;
}
.faq-icon {
  width: 27px;
  height: 28px;
  flex-shrink: 0;
}
{% endstyle %}

<div class="faq-accordion-section">
  <h2>{{ section.settings.heading }}</h2>
  <div class="faq-list">
    {% for block in section.blocks %}
      <div class="faq-item">
        <div class="faq-question" onclick="this.parentElement.classList.toggle('open'); toggleIcon(this)">
          <div class="faq-icon">
            <!-- Plus icon (default) -->
            <svg class="icon-plus" xmlns="http://www.w3.org/2000/svg" width="27" height="28" viewBox="0 0 27 28" fill="none">
              <circle cx="13.624" cy="13.8516" r="12.9466" fill="white" stroke="#2D2E31" stroke-width="0.438867"/>
              <path d="M19.2018 14.2903H14.9739V18.556H13.7416V14.2903H9.53268V13.1527H13.7416V8.88692H14.9739V13.1527H19.2018V14.2903Z" fill="#5A5151"/>
            </svg>
            <!-- Minus icon (hidden initially) -->
            <svg class="icon-minus" style="display: none;" xmlns="http://www.w3.org/2000/svg" width="27" height="28" viewBox="0 0 27 28" fill="none">
              <circle cx="13.624" cy="13.8516" r="12.9466" fill="white" stroke="#2D2E31" stroke-width="0.438867"/>
              <path d="M16.8885 13.1527V14.2713H9.51347V13.1527H16.8885Z" fill="#5A5151"/>
            </svg>
          </div>
          <span>{{ block.settings.question }}</span>
        </div>
        <div class="faq-answer">
          {{ block.settings.answer }}
        </div>
      </div>
    {% endfor %}
  </div>
</div>

<script>
  function toggleIcon(el) {
    const iconPlus = el.querySelector('.icon-plus');
    const iconMinus = el.querySelector('.icon-minus');
    if (el.parentElement.classList.contains('open')) {
      iconPlus.style.display = "none";
      iconMinus.style.display = "block";
    } else {
      iconPlus.style.display = "block";
      iconMinus.style.display = "none";
    }
  }
</script>
